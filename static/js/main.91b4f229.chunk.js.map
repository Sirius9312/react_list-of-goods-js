{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_BY_ALPHABET","SORT_BY_LENGTH","REVERSE","App","useState","actionButtons","setActionButtons","reverse","setReverse","visibleGoods","goods","copyGoods","sort","good1","good2","localeCompare","length","sortGoods","className","type","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"mOAIaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAmB,WACnBC,EAAiB,SACjBC,EAAU,UA2BT,IAAMC,EAAM,WACjB,MAA0CC,mBAAS,IAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAEMC,EA7BR,SAAmBC,EAAnB,GAAuD,IAA3BL,EAA0B,EAA1BA,cAAeE,EAAW,EAAXA,QACrCI,EAAS,YAAOD,GAqBpB,OAnBIL,IACFM,EAAYA,EAAUC,MAAK,SAACC,EAAOC,GACjC,OAAQT,GACN,KAAKL,EACH,OAAOa,EAAM,GAAGE,cAAcD,EAAM,IAEtC,KAAKb,EACH,OAAOY,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,OAKXT,IACFI,EAAYA,EAAUJ,WAGjBI,EAOcM,CAAUlB,EAAiB,CAAEM,gBAAeE,YAEjE,OACE,sBAAKW,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWb,IAAkBL,EAAmB,iBAC5C,0BACJoB,QAAS,WACPd,EAAiBN,IALrB,iCAWA,wBACEmB,KAAK,SACLD,UAAWb,IAAkBJ,EAAiB,oBAC1C,6BACJmB,QAAS,WACPd,EAAiBL,IALrB,4BAWA,wBACEkB,KAAK,SACLD,UAAWX,IAAYL,EAAU,oBAC7B,6BACJkB,QAAS,kBAAMZ,EAAWD,IAAYL,EAAU,GAAKA,IAJvD,sBAUEG,GAYEE,IAXA,wBACEY,KAAK,SACLD,UAAU,4BACVE,QAAS,WACPd,EAAiB,IACjBE,EAAW,KALf,sBA2BN,6BAEIC,EAAaY,KAAI,SAAAC,GAAI,OACnB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YCnHpCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.91b4f229.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport { useState } from 'react';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_BY_ALPHABET = 'alphabet';\nconst SORT_BY_LENGTH = 'length';\nconst REVERSE = 'reverse';\n\nfunction sortGoods(goods, { actionButtons, reverse }) {\n  let copyGoods = [...goods];\n\n  if (actionButtons) {\n    copyGoods = copyGoods.sort((good1, good2) => {\n      switch (actionButtons) {\n        case SORT_BY_ALPHABET:\n          return good1[0].localeCompare(good2[0]);\n\n        case SORT_BY_LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverse) {\n    copyGoods = copyGoods.reverse();\n  }\n\n  return copyGoods;\n}\n\nexport const App = () => {\n  const [actionButtons, setActionButtons] = useState('');\n  const [reverse, setReverse] = useState('');\n\n  const visibleGoods = sortGoods(goodsFromServer, { actionButtons, reverse });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={actionButtons === SORT_BY_ALPHABET ? 'button is-info'\n            : 'button is-info is-light'}\n          onClick={() => {\n            setActionButtons(SORT_BY_ALPHABET);\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={actionButtons === SORT_BY_LENGTH ? 'button is-success'\n            : 'button is-success is-light'}\n          onClick={() => {\n            setActionButtons(SORT_BY_LENGTH);\n          }}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={reverse === REVERSE ? 'button is-warning'\n            : 'button is-warning is-light'}\n          onClick={() => setReverse(reverse === REVERSE ? '' : REVERSE)}\n        >\n          Reverse\n        </button>\n\n        {\n          actionButtons ? (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => {\n                setActionButtons('');\n                setReverse('');\n              }}\n            >\n              Reset\n            </button>\n          ) : (\n            reverse && (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={() => {\n                  setActionButtons('');\n                  setReverse('');\n                }}\n              >\n                Reset\n              </button>\n            )\n          )\n        }\n      </div>\n\n      <ul>\n        {\n          visibleGoods.map(good => (\n            <li data-cy=\"Good\" key={good}>\n              {good}\n            </li>\n          ))\n        }\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}